<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36" version="24.9.1">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="1434" dy="746" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-3" value="API모듈&lt;div&gt;(Client 요청처리)&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;verticalAlign=top;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="90" y="75" width="130" height="80" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-0" value="BankingController" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="95" y="125" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-3" value="&lt;h2&gt;&lt;strong&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;font-size: 12px;&quot;&gt;1. 비동기 프로세싱으로 네트워크 대기 시간 최적화&lt;/font&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;code&gt;- Mono.fromCallable&lt;/code&gt;과 &lt;code&gt;Schedulers.boundedElastic()&lt;/code&gt;를 사용하여 &lt;strong&gt;비동기 방식&lt;/strong&gt;으로 작업을 처리하고, &lt;strong&gt;I/O 블로킹 작업&lt;/strong&gt;을 별도의 스레드 풀에서 실행&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;-네트워크 호출이나 외부 시스템과의 통신이 느려도 애플리케이션의 다른 요청 처리에 영향을 최소화.&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;2. 다양한 예외 처리&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot; style=&quot;&quot;&gt;&lt;font&gt;&lt;strong style=&quot;&quot;&gt;- 특정 예외&lt;/strong&gt;(&lt;code style=&quot;&quot;&gt;IllegalArgumentException&lt;/code&gt;, &lt;code style=&quot;&quot;&gt;ServiceUnavailableException&lt;/code&gt;)에 대해 상세한 로그를 남기고 적절한 HTTP 응답 코드를 반환.&lt;/font&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;- 알 수 없는 예외 상황에 대비해 &lt;code&gt;onErrorResume&lt;/code&gt;으로 &lt;strong&gt;일괄 처리&lt;/strong&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;3.대용량트래픽대비(미구현)&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;- Webclient Connection Pooling설정 : ConnectionProvider(커넥션풀), HttpClient(서버연결, 응답시간)&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font&gt;&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="310" y="75" width="800" height="170" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-4" value="Service모듈&lt;div&gt;&lt;div&gt;(비즈니스로직, 데이터일관성, 외부연계)&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;verticalAlign=top;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="292" width="270" height="100" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-5" value="SearchServiceImpl" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="30" y="332" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-6" value="TransferServiceImpl" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="160" y="332" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-7" value="SearchLogService" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="30" y="362" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-8" value="TransferLogService" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="160" y="362" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-10" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="WIyWlLk6GJQsqaUBKTNV-3" target="-l675JgobJt2gn7o8VIj-4">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="390" y="150" as="sourcePoint" />
            <mxPoint x="440" y="100" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-12" value="&lt;font&gt;&lt;b style=&quot;&quot;&gt;1. 네트워크 및 시스템 장애를 고려한 예외처리&lt;/b&gt;&lt;/font&gt;&lt;div&gt;- Retry :&amp;nbsp;&lt;code style=&quot;background-color: initial;&quot;&gt;RetryHandler&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;를 통해 네트워크 불안정이나 일시적인 장애 상황에서 외부 API 호출을 재시도&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- FeignException에 대한 구체적 처리 :&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;FeignException.GatewayTimeout&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;과 일반 &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;FeignException&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;을 구분하여 각각의 상황에 맞는 메시지를 로깅 및 처리&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- 에러 로그 관리 :&amp;nbsp;&lt;code style=&quot;background-color: initial;&quot;&gt;TransferLogService&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;와 &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;SearchLogService&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;를 활용해 예외 발생 시 로그를 기록하며, 로그에는 &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;txID&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;와 상세 메시지가 포함&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- (미구현) : 조회(잔액, 거래결과)API에서는 Ecache 및 @CachePut, @Cacheable을 사용해 DB중단시에도 inmemory활용해 정보 제공가능하도록 구현&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;계좌 이체의 일관성을 유지하기 위한 설계&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 트랜잭션 상태 관리 :&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;TransferEntity&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;를 통해 각 이체 상태(&lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;PENDING&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;COMPLETED&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;FAILED&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)를 명확히 기록하여, 장애가 발생해도 상태를 확인, 복구가능&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 출금, 입금과 롤백처리 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;출금이 실패하면 즉시 트랜잭션을 종료하고, 입금이 실패하면 출금을 롤백&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 롤백로직 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;롤백이 실패할 경우에도 &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;RollbackFailureStateRepository&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;에 상태를 기록하여, 외부 시스템에서 복구할 수 있도록 정보를 제공&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- (미구현) : @TransactionalEventListener를 통한 출금 커밋 완료 후 입금 처리&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;3. 장애 복구 및 상태 추적&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 로그 및 상태 관리 : 각 트랜잭션 로그를 MDC활용해 txID포함하여 기록&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- Idempotency : txID를 통해 중복된 요청 처리 방지&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;4. 확장성과 유지보수성&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 클라이언트 매핑 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;은행별 API 클라이언트를 &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;Map&amp;lt;String, BankingApiClient&amp;gt;&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;로 관리하며, 새로운 은행을 쉽게 추가할 수 있도록 확장성을 제공&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 모듈화 :&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;SearchService&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;TransferService&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;LogService&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; 등으로 책임을 분리하여 코드의 가독성과 유지보수성을 향상&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 재사용 가능 유틸 :&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;ObjectConvertUtil&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;, &lt;/span&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;RetryHandler&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt; 등을 활용하여 중복 코드를 최소화하고, 코드의 재사용성향상&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="310" y="292" width="800" height="160" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-13" value="&lt;div&gt;&lt;div&gt;Domain모듈&lt;/div&gt;&lt;div&gt;(JPA, Redis, Mysql등 데이터 관리)&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;verticalAlign=top;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="20" y="630" width="270" height="100" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-14" value="Entity" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="30" y="670" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-15" value="Config" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="160" y="670" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-16" value="Repository" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="95" y="700" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-18" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-l675JgobJt2gn7o8VIj-4" target="-l675JgobJt2gn7o8VIj-13">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="165" y="165" as="sourcePoint" />
            <mxPoint x="165" y="302" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-19" value="&lt;font face=&quot;Helvetica&quot;&gt;&lt;b style=&quot;&quot;&gt;1. 조회 성능 향상을 위한 Entity 설계&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;- orderedUUID : 시간 기반 UUID로 기존 UUID 대비 조회 및 파티셔닝/샤딩 성능 향상 가능&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;- @PrePersist로 id를 체크해 데이터 업데이트 시 불필요한 조회 방지&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;- (미구현) R2DBC를 활용한 비동기 DB 조회&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;롤백 실패 관리로 장애 대응 강화&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- Redis를 이용한 롤백 실패 기록 :&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;code style=&quot;background-color: initial;&quot;&gt;RollbackFailureStateRepository&lt;/code&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;를 통해 롤백 실패 상태를 Redis에 저장합니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- (미구현) Kafka등 Event Listener를 Redis에 저장된 롤백실패기록들을 재처리 가능&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. &lt;b&gt;데이터일관성을 위한 Lock(미구현)&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;- ReddisonReactiveClient을 활용한 비동기 Redis락 구현&lt;/div&gt;&lt;div&gt;- Mysql for update를 활용한 쓰기Lock&lt;/div&gt;&lt;div&gt;- JPA 비관적 Lock을 활용한 Phantom Read등 방지&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="310" y="630" width="800" height="210" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-20" value="&lt;div&gt;&lt;div&gt;Client모듈&lt;/div&gt;&lt;div&gt;(비즈니스로직, 데이터일관성, 외부연계)&lt;/div&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;verticalAlign=top;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="21" y="856" width="270" height="100" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-21" value="FeignClientConfig" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="31" y="896" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-22" value="FeignErrorDecoder" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="161" y="896" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-23" value="BankingApiFallback" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="31" y="926" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-24" value="BankingApiClient" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="161" y="926" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-25" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-l675JgobJt2gn7o8VIj-13" target="-l675JgobJt2gn7o8VIj-20">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="165" y="402" as="sourcePoint" />
            <mxPoint x="163" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-26" value="&lt;font face=&quot;Helvetica&quot;&gt;&lt;b style=&quot;&quot;&gt;1. 네트워크 불안정성 및 장애 상황에 대한 대응&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;- Resilience4j기반 Circuit Breaker 적용 : API 호출 실패 시 추가적 실패 방지, 장애 발생시 재시도 제한하여 시스템 안정성 유지&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;- Fallback처리 : 예외가 발생해도 기본동작 보장하며, 호출실패로 인해 전체 시스템이 중단되지 않도록 보호&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;데이터 일관성 및 서비스 신뢰성 유지&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 은행별 클라이언트 캐싱 : 이미 생성된 클라이언트가 있다면 재사용, 불필요한 생성 방지하여 성능 최적화&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- URL기반 동적처리 : 은행코드에 따라 URL 동적 매핑 및 잘못된 은행코드의 경우 예외처리&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- 은행코드, 네트워크 타임아웃, 외부API 문제 등 다양한 상황에 대한 명확한 예외구분 처리,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;예외상황별로 커스텀 메시지 제공&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;3. 장애 복구 및 확장성을 고려한 설계&lt;/b&gt;&lt;/div&gt;&lt;div&gt;- Fallback 기본값 제공 : 잔액조회실패, 출금보상처리 실패 등 기본값 제공을 통해 실패 이유 명확하게 도출&lt;/div&gt;&lt;div&gt;- CircuitBreaker와 Fallback 결합 : 네트워크 불안정성, API 장시간 미응답 두가지 장애에도 즉시 대응가능&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="310" y="856" width="800" height="180" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-27" value="&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Common모듈&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;(공통로직)&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=12;glass=0;strokeWidth=1;shadow=0;verticalAlign=top;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="21" y="1060" width="270" height="100" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-28" value="Exception" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="31" y="1100" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-29" value="Retry" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="161" y="1100" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-30" value="ObjectConvertUtil" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="31" y="1130" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-31" value="Validation" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="161" y="1130" width="120" height="20" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-32" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-l675JgobJt2gn7o8VIj-20" target="-l675JgobJt2gn7o8VIj-27">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="166" y="690" as="sourcePoint" />
            <mxPoint x="166" y="850" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-33" value="&lt;font face=&quot;Helvetica&quot;&gt;&lt;b style=&quot;&quot;&gt;1. 다양한 Exception 처리&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;- 계좌 미존재, 은행 미존재, 컨버젼, Feign, Feign Timeout, 거래결과 미존재 등 다양한 Exception 처리&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Retry, CircuitBreaker Config&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- Retry : 최대 3번, 500밀리초 간격 재시도&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Helvetica&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- CircuitBreaker : 스프링Actuator와 연동가능하게 설정, 10개요청 대상으로 성공/실패 50%기준, 에러나면 30초동안 OPEN 상태 유지&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;3. Validation&lt;/b&gt;&lt;/div&gt;&lt;div&gt;- BankCode, PhoneNumber, Email등 DTO에서 사용하는 컬럼 Valid처리&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="310" y="1050" width="800" height="150" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-34" value="&lt;b&gt;구현하지 못한 내용&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;div&gt;1. 클라이언트 API요청을 Redis클러스터에 기록, Kafka를 통해 순서대로 Service모듈에 전달&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2.&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Webclient Connection Pooling설정을 통한 대용량 트래픽 대비 ConnectionProvider(커넥션풀), HttpClient(서버연결, 응답시간) 등&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3. 출금, 입금 처리 등 연관된 처리에서 @&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;TransactionalEventListener를 활용한 Commit 완료 후 다음 단계 처리&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;4. R2DBC를 활용한 비동기 DB 처리&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;5. 실패한 롤백처리에 대해 Redis클러스터에 기록, 향후 Kafka로 전달하여 배치등으로 재처리 로직&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;6. 뱅킹API의 내역 중 조회 관련(잔액, 거래결과) 실행시 Ecache 및 Redis클러스터에 저장&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; - DB 장애 발생 시 Ecache -&amp;gt; Redis순으로 조회가능하도록&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp; &amp;nbsp; - Ecache, Redis에 데이터가 있다면 조회 속도 최적화&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="30" y="1510" width="1079" height="150" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-35" value="&lt;b&gt;클라이언트에게 제공할 API 변경 내역&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;div&gt;1. /transfer : 출금 -&amp;gt; 입금 및 rollback 처리가 필요하여 따로 API 개발&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2. /balance : 조회성으로서 계좌번호로만 조회가능하도록 API 개발&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; - request : accountNumber&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; - response : amount, isSuccess, message(실패시 사용)&lt;/div&gt;&lt;div&gt;3. /transactions/{txID} : 조회성 및 GetMapping으로 조회 가능하도록 API 개발&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; - response :&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;isSuccess, message(실패시 사용)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2,3번의 경우는 구현하지 못한 내용 6번관련하여 Ecache, Redis 활용해 장애 대응 및 속도 최적화하고 싶어 추가 개발&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="30" y="1210" width="1079" height="120" as="geometry" />
        </mxCell>
        <mxCell id="-l675JgobJt2gn7o8VIj-36" value="&lt;b&gt;사용한 오픈소스&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;div&gt;1. webflux : 비동기/논블로킹 처리로 대용량 트래픽 대비하기 위해 사용&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;2. resilience4j-circuitbreaker : 장애 발생시 전파 방지 위해 사용&lt;/div&gt;&lt;div&gt;3.&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;resilience4j-retry : 처리 재시도 및 실패 시 해당 트랜잭션을 redis에 저장하여 차후 재시도 하기 위해 사용&lt;/span&gt;&lt;/div&gt;&lt;div&gt;4. f4b6a3:uuid-creator : Time-based UUID 생성기로서 조회성능향상 및 차후 샤딩/파티셔닝 향상을 위해 사용&lt;/div&gt;&lt;div&gt;5. mapstruct : Jackson에서 구현하지 못하는 복잡한 DTO Mapping을 위해 사용 및 컴파일타임에 에러 체크하기 위해 사용&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;labelBorderColor=default;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="30" y="1380" width="1079" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
